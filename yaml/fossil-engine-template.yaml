apiVersion: v1
kind: Template
metadata:
  annotations:
    description: "Fossil Engine - A Container Native Backup Fraemwork"
  creationTimestamp: null
  name: fossil-engine
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Fossil workflow port
    labels:
      app: ${APPLICATION_NAME}-workflow
    name: ${APPLICATION_NAME}-workflow
  spec:
    ports:
    - port: 8000
      targetPort: 8000
    selector:
      app: ${APPLICATION_NAME}-workflow
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Fossile app port
    labels:
      app: ${APPLICATION_NAME}-app
    name: ${APPLICATION_NAME}-app
  spec:
    ports:
    - port: 8001
      targetPort: 8001
    selector:
      app: ${APPLICATION_NAME}-app
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Fossile storage port
    labels:
      app: ${APPLICATION_NAME}-storage
    name: ${APPLICATION_NAME}-storage
  spec:
    ports:
    - port: 8002
      targetPort: 8002
    selector:
      app: ${APPLICATION_NAME}-storage      
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    name: ${APPLICATION_NAME}-workflow
  spec:
    host: ${APPLICATION_DOMAIN}
    to:
      kind: Service
      name: ${APPLICATION_NAME}-workflow
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: "${APPLICATION_NAME}-workflow"
    name: "${APPLICATION_NAME}-workflow" 
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "${APPLICATION_NAME}-workflow:latest"
    runPolicy: Serial
    source:
      git:
        uri: "${SOURCE_REPOSITORY_URL_WORKFLOW}" 
        ref: "${SOURCE_REPOSITORY_REF_WORKFLOW}"
        contextDir: "${CONTEXT_DIR_WORKFLOW}"
        type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: engine/workflow/Dockerfile
        from:
          kind: ImageStreamTag
          name: fedora:latest
      type: Docker
    triggers:
    - github:
        secret: _Rn6FzszP2wVCdy5gn5A
      type: GitHub
    - generic:
        secret: lDMTxQXebRt4VBgwXZ-f
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: "${APPLICATION_NAME}-app"
    name: "${APPLICATION_NAME}-app" 
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "${APPLICATION_NAME}-app:latest"
    runPolicy: Serial
    source:
      git:
        uri: "${SOURCE_REPOSITORY_URL_APP}" 
        ref: "${SOURCE_REPOSITORY_REF_APP}"
        contextDir: "${CONTEXT_DIR_APP}"
        type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: engine/app/Dockerfile
        from:
          kind: ImageStreamTag
          name: fedora:latest
      type: Docker
    triggers:
    - github:
        secret: _Rn6FzszP2wVCdy5gn5A
      type: GitHub
    - generic:
        secret: lDMTxQXebRt4VBgwXZ-f
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0    
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: "${APPLICATION_NAME}-storage"
    name: "${APPLICATION_NAME}-storage" 
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "${APPLICATION_NAME}-storage:latest"
    runPolicy: Serial
    source:
      git:
        uri: "${SOURCE_REPOSITORY_URL_STORAGE}" 
        ref: "${SOURCE_REPOSITORY_REF_STORAGE}"
        contextDir: "${CONTEXT_DIR_STORAGE}"
        type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: engine/storage/Dockerfile
        from:
          kind: ImageStreamTag
          name: fedora:latest
      type: Docker
    triggers:
    - github:
        secret: _Rn6FzszP2wVCdy5gn5A
      type: GitHub
    - generic:
        secret: lDMTxQXebRt4VBgwXZ-f
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0    
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: "${APPLICATION_NAME}-data" 
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${STORAGE_CAPACITY}"
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: "${APPLICATION_NAME}-workflow" 
  spec:
    replicas: 1
    selector:
      app: "${APPLICATION_NAME}-workflow"
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}-workflow"
      spec:
        containers:
        - capabilities: {}
          image: ' '
          imagePullPolicy: IfNotPresent
          name: "${APPLICATION_NAME}-workflow"
          terminationMessagePath: /dev/termination-log
          ports:
          -containerPort: 8080
        dnsPolicy: ClusterFirst
        restartPolicy: Always
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${APPLICATION_NAME}-workflow"
        from:
          kind: ImageStreamTag
          name: "${APPLICATION_NAME}-workflow:latest"
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: "${APPLICATION_NAME}-app" 
  spec:
    replicas: 1
    selector:
      app: "${APPLICATION_NAME}-app"
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}-app"
      spec:
        containers:
        - capabilities: {}
          image: ' '
          imagePullPolicy: IfNotPresent
          name: "${APPLICATION_NAME}-app"
          terminationMessagePath: /dev/termination-log
          ports:
          -containerPort: 8080
        dnsPolicy: ClusterFirst
        restartPolicy: Always
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${APPLICATION_NAME}-app"
        from:
          kind: ImageStreamTag
          name: "${APPLICATION_NAME}-app:latest"
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
  status: {}  
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: "${APPLICATION_NAME}-storage" 
  spec:
    replicas: 1
    selector:
      app: "${APPLICATION_NAME}-storage"
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}-storage"
      spec:
        containers:
        - capabilities: {}
          image: ' '
          imagePullPolicy: IfNotPresent
          name: "${APPLICATION_NAME}-storage"
          terminationMessagePath: /dev/termination-log
          ports:
          -containerPort: 8080
          volumeMounts:
          - mountPath: /backup
            name: "${APPLICATION_NAME}-data"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: "${APPLICATION_NAME}-data" 
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}-data"
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${APPLICATION_NAME}-storage"
        from:
          kind: ImageStreamTag
          name: "${APPLICATION_NAME}-storage:latest"
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
  status: {}  
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: "${APPLICATION_NAME}-workflow"
    name: "${APPLICATION_NAME}-workflow"
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: "${APPLICATION_NAME}-app"
    name: "${APPLICATION_NAME}-app"
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: "${APPLICATION_NAME}-storage"
    name: "${APPLICATION_NAME}-storage"
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""        
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
    generation: 2
    labels:
      app: "${APPLICATION_NAME}-workflow"
    name: fedora
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: fedora:latest
      from:
        kind: DockerImage
        name: fedora:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
    generation: 2
    labels:
      app: "${APPLICATION_NAME}-app"
    name: fedora
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: fedora:latest
      from:
        kind: DockerImage
        name: fedora:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
    generation: 2
    labels:
      app: "${APPLICATION_NAME}-storage"
    name: fedora
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: fedora:latest
      from:
        kind: DockerImage
        name: fedora:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source                
parameters:
  - name: APPLICATION_NAME
    displayName: Application Name
    description: the name and label for all components
    value: fossil
    required: true
  - name: APPLICATION_DOMAIN
    displayName: Application Domain
    description: Application domain name used in route to service
  - name: SOURCE_REPOSITORY_URL_WORKFLOW
    displayName: Source Repository URL
    description: The URL of the repository with your application source code
    value: https://github.com/ktenzer/fossil.git
    required: true
  - name: SOURCE_REPOSITORY_URL_APP
    displayName: Source Repository URL
    description: The URL of the repository with your application source code
    value: https://github.com/ktenzer/fossil.git
    required: true  
  - name: SOURCE_REPOSITORY_URL_STORAGE
    displayName: Source Repository URL
    description: The URL of the repository with your application source code
    value: https://github.com/ktenzer/fossil.git
    required: true    
  - name: CONTEXT_DIR_WORKFLOW
    displayName: Context Dir for workflow
    description: Context Dir for workflow
    value: engine/workflow
    required: true    
  - name: CONTEXT_DIR_APP
    displayName: Context Dir for app
    description: Context Dir for app
    value: engine/app
    required: true   
  - name: CONTEXT_DIR_STORAGE
    displayName: Context Dir for storage
    description: Context Dir for storage
    value: engine/storage
    required: true             
  - name: SOURCE_REPOSITORY_REF_WORKFLOW
    displayName: Source Repository Reference Tag
    description: The Branch tag to use
    value: master
  - name: SOURCE_REPOSITORY_REF_APP
    displayName: Source Repository Reference Tag
    description: The Branch tag to use
    value: master    
  - name: SOURCE_REPOSITORY_REF_STORAGE
    displayName: Source Repository Reference Tag
    description: The Branch tag to use
    value: master    
  - name: STORAGE_CAPACITY
    description: Storage needed for ML Models
    value: 10Gi