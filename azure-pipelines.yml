# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  PLUGIN_DIR: '$(GOBIN)'
  modulePath: '$(GOPATH)/src' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOPATH)'
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(GOPATH)/src/fossul'
    mv $(system.defaultWorkingDirectory)/* $(system.defaultWorkingDirectory)/gopath/src/fossul
    shopt -s extglob
    shopt -s dotglob
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get -v -t -d ./...
    if [ -f Gopkg.toml ]; then
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        dep ensure
    fi
    $(GOPATH)/src/fossul/fossul-server-build.sh
    $(GOPATH)/src/fossul/fossul-app-build.sh
    $(GOPATH)/src/fossul/fossul-storage-build.sh
  workingDirectory: '$(GOPATH)'
  displayName: 'Get dependencies, then build'
